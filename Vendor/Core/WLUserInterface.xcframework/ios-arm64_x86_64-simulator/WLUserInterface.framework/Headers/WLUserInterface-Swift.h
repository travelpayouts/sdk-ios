#if defined(__arm64__) && __arm64__
#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef WLUSERINTERFACE_SWIFT_H
#define WLUSERINTERFACE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CrispyCalendar;
@import Foundation;
@import MapKit;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="WLUserInterface",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSCoder;

SWIFT_CLASS("_TtC15WLUserInterface17ActivityIndicator")
@interface ActivityIndicator : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC15WLUserInterface12ActivityView")
@interface ActivityView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@class UITraitCollection;

SWIFT_CLASS("_TtC15WLUserInterface22BaseCollectionViewCell")
@interface BaseCollectionViewCell : UICollectionViewCell
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


SWIFT_CLASS("_TtC15WLUserInterface21AdvertisingBannerCell")
@interface AdvertisingBannerCell : BaseCollectionViewCell
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC15WLUserInterface8BaseView")
@interface BaseView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface9AlertView")
@interface AlertView : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToWindow;
@end




SWIFT_CLASS("_TtC15WLUserInterface19BaseBottomSheetView")
@interface BaseBottomSheetView : BaseView
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end




@class NSString;

SWIFT_CLASS("_TtC15WLUserInterface17BaseTableViewCell")
@interface BaseTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated;
@end



@class UICollectionViewLayout;

SWIFT_CLASS("_TtC15WLUserInterface21BugFreeCollectionView")
@interface BugFreeCollectionView : UICollectionView
- (void)addSubview:(UIView * _Nonnull)view;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC15WLUserInterface6Button")
@interface Button : UIControl
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis;
- (void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis;
@end





SWIFT_CLASS("_TtC15WLUserInterface16ButtonsContainer")
@interface ButtonsContainer : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC15WLUserInterface13ButtonsHeader")
@interface ButtonsHeader : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC15WLUserInterface12CalendarView")
@interface CalendarView : BaseView
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end






@protocol MKAnnotation;

SWIFT_CLASS("_TtC15WLUserInterface21ClusterAnnotationView")
@interface ClusterAnnotationView : MKAnnotationView
- (nonnull instancetype)initWithAnnotation:(id <MKAnnotation> _Nullable)annotation reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)prepareForDisplay;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end




SWIFT_CLASS("_TtC15WLUserInterface19CommonFavoritesView")
@interface CommonFavoritesView : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


@class NSBundle;

SWIFT_CLASS("_TtC15WLUserInterface24CoordinatorViewContoller")
@interface CoordinatorViewContoller : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtCC15WLUserInterface10PriceChart10DataSource")
@interface DataSource : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSIndexPath;
@class UICollectionReusableView;

@interface DataSource (SWIFT_EXTENSION(WLUserInterface))
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class UIEvent;

/// A dim view for use as an overlay over content you want dimmed.
SWIFT_CLASS("_TtC15WLUserInterface10DimmedView")
@interface DimmedView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC15WLUserInterface13FavoritesCell")
@interface FavoritesCell : BaseCollectionViewCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


@class UICollectionViewUpdateItem;
@class NSCollectionLayoutSection;
@class UICollectionViewCompositionalLayoutConfiguration;

SWIFT_CLASS("_TtC15WLUserInterface37FixedContentOffsetCompositionalLayout")
@interface FixedContentOffsetCompositionalLayout : UICollectionViewCompositionalLayout
- (void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> * _Nonnull)updateItems;
- (void)finalizeCollectionViewUpdates;
- (nonnull instancetype)initWithSection:(NSCollectionLayoutSection * _Nonnull)section OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSection:(NSCollectionLayoutSection * _Nonnull)section configuration:(UICollectionViewCompositionalLayoutConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSectionProvider:(UICollectionViewCompositionalLayoutSectionProvider _Nonnull)sectionProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSectionProvider:(UICollectionViewCompositionalLayoutSectionProvider _Nonnull)sectionProvider configuration:(UICollectionViewCompositionalLayoutConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15WLUserInterface13GrabberHeader")
@interface GrabberHeader : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC15WLUserInterface16GradientFadeView")
@interface GradientFadeView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIImage;

SWIFT_CLASS("_TtC15WLUserInterface9ImageView")
@interface ImageView : UIImageView
- (void)didMoveToWindow;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class NSAttributedString;

SWIFT_CLASS("_TtC15WLUserInterface5Label")
@interface Label : UILabel
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedText;
@property (nonatomic) NSLineBreakMode lineBreakMode;
@property (nonatomic) NSTextAlignment textAlignment;
- (void)drawTextInRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end







@class UICollectionViewLayoutAttributes;
@class UICollectionViewLayoutInvalidationContext;

/// A collection view layout that can display items in a grid and list arrangement.
/// Consumers should implement <code>UICollectionViewDelegateMagazineLayout</code>, which is used for all
/// <code>MagazineLayout</code> customizations.
/// Returning different <code>MagazineLayoutItemSizeMode</code>s from the delegate protocol implementation will
/// change how many items are displayed in a row and how each item sizes vertically.
SWIFT_CLASS("_TtC15WLUserInterface14MagazineLayout")
@interface MagazineLayout : UICollectionViewLayout
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layoutAttributesClass;)
+ (Class _Nonnull)layoutAttributesClass SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull invalidationContextClass;)
+ (Class _Nonnull)invalidationContextClass SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;
@property (nonatomic, readonly) CGSize collectionViewContentSize;
- (void)prepareLayout;
- (void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> * _Nonnull)updateItems;
- (void)finalizeCollectionViewUpdates;
- (void)prepareForAnimatedBoundsChange:(CGRect)oldBounds;
- (void)finalizeAnimatedBoundsChange;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForSupplementaryViewOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)initialLayoutAttributesForAppearingItemAtIndexPath:(NSIndexPath * _Nonnull)itemIndexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)finalLayoutAttributesForDisappearingItemAtIndexPath:(NSIndexPath * _Nonnull)itemIndexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)elementIndexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)elementIndexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldInvalidateLayoutForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes * _Nonnull)originalAttributes SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes * _Nonnull)originalAttributes SWIFT_WARN_UNUSED_RESULT;
- (void)invalidateLayoutWithContext:(UICollectionViewLayoutInvalidationContext * _Nonnull)context;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





/// A collection reusable view that coordinates with <code>MagazineLayoutCollectionViewLayoutAttributes</code>
/// to determine how to size itself: with self-sizing, or without self-sizing. Use this class
/// (or subclasses) for displaying header and background supplementary views with <code>MagazineLayout</code>.
/// Note that this class is very similar to <code>MagazineLayoutCollectionViewCell</code>.
/// <code>UIKit</code> invokes <code>preferredLayoutAttributesFitting(_:)</code> with an initial set of layout attributes,
/// giving this reusable view subclass a chance to modify the <code>size</code> property of the attributes
/// based on whether or not we want to self-size.
/// Subclassing and/or adding additional protocol conformances is encouraged, although modifying
/// the behavior of <code>preferredLayoutAttributesFitting(_:)</code> is not recommended.
/// This class exists because <code>MagazineLayout</code> supports self-sizing supplementary views in just the
/// vertical dimension - a use case that <code>UICollectionReusableView</code> does not support out-of-the-box.
SWIFT_CLASS("_TtC15WLUserInterface36MagazineLayoutCollectionReusableView")
@interface MagazineLayoutCollectionReusableView : UICollectionReusableView
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A cell that coordinates with <code>MagazineLayoutCollectionViewLayoutAttributes</code> to determine how to
/// size itself: with self-sizing, or without self-sizing. Use this class (or subclasses) for
/// displaying cells with <code>MagazineLayout</code>.
/// Note that this class is very similar to <code>MagazineLayoutCollectionReusableView</code>.
/// <code>UIKit</code> invokes <code>preferredLayoutAttributesFitting(_:)</code> with an initial set of layout attributes,
/// giving this cell subclass a chance to modify the <code>size</code> property of the attributes based on
/// whether or not we want to self-size.
/// Subclassing and/or adding additional protocol conformances is encouraged, although modifying
/// the behavior of <code>preferredLayoutAttributesFitting(_:)</code> is not recommended.
/// This class exists because <code>MagazineLayout</code> supports self-sizing in just the vertical dimension -
/// a use case that <code>UICollectionViewCell</code> does not support out-of-the-box.
/// As of iOS 12, <code>UICollectionReusableView</code> is tightly coupled with <code>UICollectionViewFlowLayout</code>‘s
/// private <code>_estimatesSizes</code> property, which is used to determine how to size cells displayed in a
/// <code>UICollectionViewFlowLayout</code>. If <code>_estimatesSizes</code> is <code>true</code>, then <code>UICollectionReusableView</code>
/// will self-size in both the horizontal and vertical dimensions. If it is <code>false</code>, no self-sizing
/// will occur. In short, <code>UICollectionReusableView</code> is only optimized to work correctly with
/// Apple’s own layout.
SWIFT_CLASS("_TtC15WLUserInterface32MagazineLayoutCollectionViewCell")
@interface MagazineLayoutCollectionViewCell : UICollectionViewCell
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// Encapsulates the vertical fitting priority for an element laid out by <code>MagazineLayout</code>.
/// Used by <code>UICollectionViewCell</code> and <code>UICollectionReusableView</code> subclasses to determine which
/// vertical fitting priority to pass into
/// <code>systemLayoutSizeFitting(_:withHorizontalFittingPriority:verticalFittingPriority)</code> via
/// <code>preferredLayoutAttributesFitting(_:)</code>.
SWIFT_CLASS("_TtC15WLUserInterface44MagazineLayoutCollectionViewLayoutAttributes")
@interface MagazineLayoutCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// <code>MagazineLayout</code>’s invalidation context type.
/// Used to indicate that collection view properties and/or delegate layout metrics changed.
SWIFT_CLASS("_TtC15WLUserInterface33MagazineLayoutInvalidationContext")
@interface MagazineLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15WLUserInterface7MapView")
@interface MapView : MKMapView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC15WLUserInterface20ModalScreenWrapperVC")
@interface ModalScreenWrapperVC : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class UIColor;
@class NSNumberFormatter;
@class UITextField;

IB_DESIGNABLE
SWIFT_CLASS("_TtC15WLUserInterface11MultiSlider")
@interface MultiSlider : UIControl
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull value;
@property (nonatomic) IBInspectable CGFloat minimumValue;
@property (nonatomic) IBInspectable CGFloat maximumValue;
@property (nonatomic) IBInspectable BOOL isContinuous;
@property (nonatomic, readonly) NSInteger draggedThumbIndex;
@property (nonatomic) IBInspectable NSInteger thumbCount;
/// make specific thumbs fixed (and grayed)
@property (nonatomic, copy) NSSet<NSNumber *> * _Nonnull disabledThumbIndices;
/// minimal distance to keep between thumbs (half a thumb by default)
@property (nonatomic) IBInspectable CGFloat distanceBetweenThumbs;
@property (nonatomic) IBInspectable BOOL keepsDistanceBetweenThumbs;
/// snap thumbs to specific values, evenly spaced. (default = 0: allow any value)
@property (nonatomic) IBInspectable CGFloat snapStepSize;
/// snap thumbs to specific values. changes <code>minimumValue</code> and <code>maximumValue</code>.  (default = []: allow any value)
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull snapValues;
/// image to show at each snap value
@property (nonatomic, strong) IBInspectable UIImage * _Nullable snapImage;
/// generate haptic feedback when hitting snap steps
@property (nonatomic) IBInspectable BOOL isHapticSnap;
/// show value labels next to thumbs. (default: show no label)
@property (nonatomic) NSLayoutAttribute valueLabelPosition;
/// value label shows difference from previous thumb value (true) or absolute value (false = default)
@property (nonatomic) IBInspectable BOOL isValueLabelRelative;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable valueLabelColor;
@property (nonatomic, strong) NSNumberFormatter * _Nonnull valueLabelFormatter;
/// Return value label text for a thumb index and value. If <code>nil</code>, then <code>valueLabelFormatter</code> will be used instead.
@property (nonatomic, copy) NSString * _Nullable (^ _Nullable valueLabelTextForThumb)(NSInteger, CGFloat);
@property (nonatomic) IBInspectable BOOL isVertical;
@property (nonatomic) UILayoutConstraintAxis orientation;
/// track color before first thumb and after last thumb. <code>nil</code> means to use the tintColor, like the rest of the track.
@property (nonatomic, strong) IBInspectable UIColor * _Nullable outerTrackColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable thumbTintColor;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable thumbImage;
@property (nonatomic) IBInspectable BOOL showsThumbImageShadow;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable minimumImage;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable maximumImage;
@property (nonatomic) IBInspectable CGFloat trackWidth;
@property (nonatomic) IBInspectable BOOL hasRoundTrackEnds;
/// when thumb value is minimum or maximum, align it’s center with the track end instead of its edge.
@property (nonatomic) IBInspectable BOOL centerThumbOnTrackEnd;
@property (nonatomic, copy) NSArray<UIImageView *> * _Nonnull thumbViews;
@property (nonatomic, copy) NSArray<UITextField *> * _Nonnull valueLabels;
@property (nonatomic, strong) UIView * _Nonnull trackView;
@property (nonatomic, copy) NSArray<UIImageView *> * _Nonnull snapViews;
@property (nonatomic, copy) NSArray<UIView *> * _Nonnull outerTrackViews;
@property (nonatomic, strong) UIImageView * _Nonnull minimumView;
@property (nonatomic, strong) UIImageView * _Nonnull maximumView;
- (void)tintColorDidChange;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
@end


@class UIGestureRecognizer;
@class UIPanGestureRecognizer;

@interface MultiSlider (SWIFT_EXTENSION(WLUserInterface)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (void)didDrag:(UIPanGestureRecognizer * _Nonnull)panGesture;
@end











SWIFT_CLASS("_TtC15WLUserInterface16PagingImagesView")
@interface PagingImagesView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end






@interface PagingImagesView (SWIFT_EXTENSION(WLUserInterface)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC15WLUserInterface19PagingIndicatorView")
@interface PagingIndicatorView : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(CGRect)rect;
@end





SWIFT_CLASS("_TtC15WLUserInterface34TransparentBarNavigationController")
@interface TransparentBarNavigationController : UINavigationController
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15WLUserInterface28PanModalNavigationController")
@interface PanModalNavigationController : TransparentBarNavigationController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface PanModalNavigationController (SWIFT_EXTENSION(WLUserInterface))
- (UIViewController * _Nullable)popViewControllerAnimated:(BOOL)animated SWIFT_WARN_UNUSED_RESULT;
- (void)pushViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (void)setViewControllers:(NSArray<UIViewController *> * _Nonnull)viewControllers animated:(BOOL)animated;
@end



/// Handles the animation of the presentedViewController as it is presented or dismissed.
/// This is a vertical animation that
/// <ul>
///   <li>
///     Animates up from the bottom of the screen
///   </li>
///   <li>
///     Dismisses from the top to the bottom of the screen
///   </li>
/// </ul>
/// This can be used as a standalone object for transition animation,
/// but is primarily used in the PanModalPresentationDelegate for handling pan modal transitions.
/// note:
/// The presentedViewController can conform to PanModalPresentable to adjust
/// it’s starting position through manipulating the shortFormHeight
SWIFT_CLASS("_TtC15WLUserInterface28PanModalPresentationAnimator")
@interface PanModalPresentationAnimator : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol UIViewControllerContextTransitioning;

@interface PanModalPresentationAnimator (SWIFT_EXTENSION(WLUserInterface)) <UIViewControllerAnimatedTransitioning>
/// Returns the transition duration
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
/// Performs the appropriate animation based on the transition style
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
@end

@protocol UIViewControllerTransitionCoordinator;

/// The PanModalPresentationController is the middle layer between the presentingViewController
/// and the presentedViewController.
/// It controls the coordination between the individual transition classes as well as
/// provides an abstraction over how the presented view is presented & displayed.
/// For example, we add a drag indicator view above the presented view and
/// a background overlay between the presenting & presented view.
/// The presented view’s layout configuration & presentation is defined using the PanModalPresentable.
/// By conforming to the PanModalPresentable protocol & overriding values
/// the presented view can define its layout configuration & presentation.
SWIFT_CLASS("_TtC15WLUserInterface30PanModalPresentationController")
@interface PanModalPresentationController : UIPresentationController
/// Override presented view to return the pan container wrapper
@property (nonatomic, readonly, strong) UIView * _Nonnull presentedView;
- (void)containerViewWillLayoutSubviews;
- (void)presentationTransitionWillBegin;
- (void)presentationTransitionDidEnd:(BOOL)completed;
- (void)dismissalTransitionWillBegin;
- (void)dismissalTransitionDidEnd:(BOOL)completed;
/// Update presented view size in response to size class changes
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithPresentedViewController:(UIViewController * _Nonnull)presentedViewController presentingViewController:(UIViewController * _Nullable)presentingViewController OBJC_DESIGNATED_INITIALIZER;
@end



@interface PanModalPresentationController (SWIFT_EXTENSION(WLUserInterface)) <UIGestureRecognizerDelegate>
/// Do not require any other gesture recognizers to fail
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
/// Allow simultaneous gesture recognizers only when the other gesture recognizer’s view
/// is the pan scrollable view
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end






/// The PanModalPresentationDelegate conforms to the various transition delegates
/// and vends the appropriate object for each transition controller requested.
/// Usage:
/// \code
/// viewController.modalPresentationStyle = .custom
/// viewController.transitioningDelegate = PanModalPresentationDelegate.default
///
/// \endcode
SWIFT_CLASS("_TtC15WLUserInterface28PanModalPresentationDelegate")
@interface PanModalPresentationDelegate : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface PanModalPresentationDelegate (SWIFT_EXTENSION(WLUserInterface)) <UIPopoverPresentationControllerDelegate>
/// Dismisses the presented view controller
- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller traitCollection:(UITraitCollection * _Nonnull)traitCollection SWIFT_WARN_UNUSED_RESULT;
@end


@interface PanModalPresentationDelegate (SWIFT_EXTENSION(WLUserInterface)) <UIViewControllerTransitioningDelegate>
/// Returns a modal presentation animator configured for the presenting state
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Returns a modal presentation animator configured for the dismissing state
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
/// Returns a modal presentation controller to coordinate the transition from the presenting
/// view controller to the presented view controller.
/// Changes in size class during presentation are handled via the adaptive presentation delegate
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC15WLUserInterface19PointAnnotationView")
@interface PointAnnotationView : MKAnnotationView
- (nonnull instancetype)initWithAnnotation:(id <MKAnnotation> _Nullable)annotation reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)prepareForDisplay;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end



SWIFT_CLASS("_TtC15WLUserInterface28PriceAndRatingAnnotationView")
@interface PriceAndRatingAnnotationView : MKAnnotationView
@property (nonatomic, strong) id <MKAnnotation> _Nullable annotation;
- (nonnull instancetype)initWithAnnotation:(id <MKAnnotation> _Nullable)annotation reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
@end





SWIFT_CLASS("_TtC15WLUserInterface10PriceChart")
@interface PriceChart : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end







@interface PriceChart (SWIFT_EXTENSION(WLUserInterface))
@end


@interface PriceChart (SWIFT_EXTENSION(WLUserInterface))
@end



@class UIScrollView;

@interface PriceChart (SWIFT_EXTENSION(WLUserInterface)) <UICollectionViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC15WLUserInterface11ProgressBar")
@interface ProgressBar : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface17SelectableControl")
@interface SelectableControl : UIControl
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface13RatingTagView")
@interface RatingTagView : SelectableControl
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end






SWIFT_RESILIENT_CLASS("_TtC15WLUserInterface23RoundedCrispyCalendarVC")
@interface RoundedCrispyCalendarVC : CPCCalendarViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)selectionDidChange;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC15WLUserInterface19SearchResultRowCell")
@interface SearchResultRowCell : BaseCollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC15WLUserInterface13SectionHeader")
@interface SectionHeader : UICollectionReusableView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)prepareForReuse;
@end





SWIFT_CLASS("_TtC15WLUserInterface22SegmentedControlRouter")
@interface SegmentedControlRouter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15WLUserInterface20SegmentedControlView")
@interface SegmentedControlView : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC15WLUserInterface16SelectionControl")
@interface SelectionControl : UIControl
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC15WLUserInterface26SeparatorSupplementaryView")
@interface SeparatorSupplementaryView : UICollectionReusableView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface12SkeletonCell")
@interface SkeletonCell : BaseCollectionViewCell
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC15WLUserInterface16SkeletonCellView")
@interface SkeletonCellView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end






SWIFT_CLASS("_TtC15WLUserInterface10SliderView")
@interface SliderView : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end





SWIFT_CLASS("_TtC15WLUserInterface17SquircleImageView")
@interface SquircleImageView : UIImageView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface12StarsTagView")
@interface StarsTagView : SelectableControl
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end







SWIFT_CLASS("_TtC15WLUserInterface11StepperCell")
@interface StepperCell : BaseCollectionViewCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC15WLUserInterface11StepperView")
@interface StepperView : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC15WLUserInterface8TextCell")
@interface TextCell : BaseCollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC15WLUserInterface12TextCellView")
@interface TextCellView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC15WLUserInterface12TitleTagView")
@interface TitleTagView : SelectableControl
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end






@class UITouch;

SWIFT_CLASS("_TtC15WLUserInterface25TouchesPassCollectionView")
@interface TouchesPassCollectionView : UICollectionView
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC15WLUserInterface13TwoTitlesView")
@interface TwoTitlesView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end























































SWIFT_CLASS("_TtC15WLUserInterface14WebBrowserView")
@interface WebBrowserView : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtCC15WLUserInterface12WebBrowserVC21WebNavigationDelegate")
@interface WebNavigationDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class WKWebView;
@class WKWebViewConfiguration;
@class WKNavigationAction;
@class WKWindowFeatures;

@interface WebNavigationDelegate (SWIFT_EXTENSION(WLUserInterface)) <WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
@end

@class WKNavigation;

@interface WebNavigationDelegate (SWIFT_EXTENSION(WLUserInterface)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
@end


SWIFT_CLASS("_TtC15WLUserInterface19ZeroDataEmbededView")
@interface ZeroDataEmbededView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC15WLUserInterface12ZeroDataView")
@interface ZeroDataView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)didMoveToSuperview;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif

#elif defined(__x86_64__) && __x86_64__
#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef WLUSERINTERFACE_SWIFT_H
#define WLUSERINTERFACE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CrispyCalendar;
@import Foundation;
@import MapKit;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="WLUserInterface",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSCoder;

SWIFT_CLASS("_TtC15WLUserInterface17ActivityIndicator")
@interface ActivityIndicator : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC15WLUserInterface12ActivityView")
@interface ActivityView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@class UITraitCollection;

SWIFT_CLASS("_TtC15WLUserInterface22BaseCollectionViewCell")
@interface BaseCollectionViewCell : UICollectionViewCell
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


SWIFT_CLASS("_TtC15WLUserInterface21AdvertisingBannerCell")
@interface AdvertisingBannerCell : BaseCollectionViewCell
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC15WLUserInterface8BaseView")
@interface BaseView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface9AlertView")
@interface AlertView : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToWindow;
@end




SWIFT_CLASS("_TtC15WLUserInterface19BaseBottomSheetView")
@interface BaseBottomSheetView : BaseView
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end




@class NSString;

SWIFT_CLASS("_TtC15WLUserInterface17BaseTableViewCell")
@interface BaseTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated;
@end



@class UICollectionViewLayout;

SWIFT_CLASS("_TtC15WLUserInterface21BugFreeCollectionView")
@interface BugFreeCollectionView : UICollectionView
- (void)addSubview:(UIView * _Nonnull)view;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC15WLUserInterface6Button")
@interface Button : UIControl
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isEnabled) BOOL enabled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis;
- (void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis;
@end





SWIFT_CLASS("_TtC15WLUserInterface16ButtonsContainer")
@interface ButtonsContainer : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC15WLUserInterface13ButtonsHeader")
@interface ButtonsHeader : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC15WLUserInterface12CalendarView")
@interface CalendarView : BaseView
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end






@protocol MKAnnotation;

SWIFT_CLASS("_TtC15WLUserInterface21ClusterAnnotationView")
@interface ClusterAnnotationView : MKAnnotationView
- (nonnull instancetype)initWithAnnotation:(id <MKAnnotation> _Nullable)annotation reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)prepareForDisplay;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end




SWIFT_CLASS("_TtC15WLUserInterface19CommonFavoritesView")
@interface CommonFavoritesView : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


@class NSBundle;

SWIFT_CLASS("_TtC15WLUserInterface24CoordinatorViewContoller")
@interface CoordinatorViewContoller : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtCC15WLUserInterface10PriceChart10DataSource")
@interface DataSource : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSIndexPath;
@class UICollectionReusableView;

@interface DataSource (SWIFT_EXTENSION(WLUserInterface))
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class UIEvent;

/// A dim view for use as an overlay over content you want dimmed.
SWIFT_CLASS("_TtC15WLUserInterface10DimmedView")
@interface DimmedView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC15WLUserInterface13FavoritesCell")
@interface FavoritesCell : BaseCollectionViewCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


@class UICollectionViewUpdateItem;
@class NSCollectionLayoutSection;
@class UICollectionViewCompositionalLayoutConfiguration;

SWIFT_CLASS("_TtC15WLUserInterface37FixedContentOffsetCompositionalLayout")
@interface FixedContentOffsetCompositionalLayout : UICollectionViewCompositionalLayout
- (void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> * _Nonnull)updateItems;
- (void)finalizeCollectionViewUpdates;
- (nonnull instancetype)initWithSection:(NSCollectionLayoutSection * _Nonnull)section OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSection:(NSCollectionLayoutSection * _Nonnull)section configuration:(UICollectionViewCompositionalLayoutConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSectionProvider:(UICollectionViewCompositionalLayoutSectionProvider _Nonnull)sectionProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSectionProvider:(UICollectionViewCompositionalLayoutSectionProvider _Nonnull)sectionProvider configuration:(UICollectionViewCompositionalLayoutConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15WLUserInterface13GrabberHeader")
@interface GrabberHeader : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC15WLUserInterface16GradientFadeView")
@interface GradientFadeView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIImage;

SWIFT_CLASS("_TtC15WLUserInterface9ImageView")
@interface ImageView : UIImageView
- (void)didMoveToWindow;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class NSAttributedString;

SWIFT_CLASS("_TtC15WLUserInterface5Label")
@interface Label : UILabel
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedText;
@property (nonatomic) NSLineBreakMode lineBreakMode;
@property (nonatomic) NSTextAlignment textAlignment;
- (void)drawTextInRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end







@class UICollectionViewLayoutAttributes;
@class UICollectionViewLayoutInvalidationContext;

/// A collection view layout that can display items in a grid and list arrangement.
/// Consumers should implement <code>UICollectionViewDelegateMagazineLayout</code>, which is used for all
/// <code>MagazineLayout</code> customizations.
/// Returning different <code>MagazineLayoutItemSizeMode</code>s from the delegate protocol implementation will
/// change how many items are displayed in a row and how each item sizes vertically.
SWIFT_CLASS("_TtC15WLUserInterface14MagazineLayout")
@interface MagazineLayout : UICollectionViewLayout
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layoutAttributesClass;)
+ (Class _Nonnull)layoutAttributesClass SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull invalidationContextClass;)
+ (Class _Nonnull)invalidationContextClass SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;
@property (nonatomic, readonly) CGSize collectionViewContentSize;
- (void)prepareLayout;
- (void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> * _Nonnull)updateItems;
- (void)finalizeCollectionViewUpdates;
- (void)prepareForAnimatedBoundsChange:(CGRect)oldBounds;
- (void)finalizeAnimatedBoundsChange;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForSupplementaryViewOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)initialLayoutAttributesForAppearingItemAtIndexPath:(NSIndexPath * _Nonnull)itemIndexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)finalLayoutAttributesForDisappearingItemAtIndexPath:(NSIndexPath * _Nonnull)itemIndexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)elementIndexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutAttributes * _Nullable)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)elementIndexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldInvalidateLayoutForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes * _Nonnull)originalAttributes SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes * _Nonnull)originalAttributes SWIFT_WARN_UNUSED_RESULT;
- (void)invalidateLayoutWithContext:(UICollectionViewLayoutInvalidationContext * _Nonnull)context;
- (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





/// A collection reusable view that coordinates with <code>MagazineLayoutCollectionViewLayoutAttributes</code>
/// to determine how to size itself: with self-sizing, or without self-sizing. Use this class
/// (or subclasses) for displaying header and background supplementary views with <code>MagazineLayout</code>.
/// Note that this class is very similar to <code>MagazineLayoutCollectionViewCell</code>.
/// <code>UIKit</code> invokes <code>preferredLayoutAttributesFitting(_:)</code> with an initial set of layout attributes,
/// giving this reusable view subclass a chance to modify the <code>size</code> property of the attributes
/// based on whether or not we want to self-size.
/// Subclassing and/or adding additional protocol conformances is encouraged, although modifying
/// the behavior of <code>preferredLayoutAttributesFitting(_:)</code> is not recommended.
/// This class exists because <code>MagazineLayout</code> supports self-sizing supplementary views in just the
/// vertical dimension - a use case that <code>UICollectionReusableView</code> does not support out-of-the-box.
SWIFT_CLASS("_TtC15WLUserInterface36MagazineLayoutCollectionReusableView")
@interface MagazineLayoutCollectionReusableView : UICollectionReusableView
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A cell that coordinates with <code>MagazineLayoutCollectionViewLayoutAttributes</code> to determine how to
/// size itself: with self-sizing, or without self-sizing. Use this class (or subclasses) for
/// displaying cells with <code>MagazineLayout</code>.
/// Note that this class is very similar to <code>MagazineLayoutCollectionReusableView</code>.
/// <code>UIKit</code> invokes <code>preferredLayoutAttributesFitting(_:)</code> with an initial set of layout attributes,
/// giving this cell subclass a chance to modify the <code>size</code> property of the attributes based on
/// whether or not we want to self-size.
/// Subclassing and/or adding additional protocol conformances is encouraged, although modifying
/// the behavior of <code>preferredLayoutAttributesFitting(_:)</code> is not recommended.
/// This class exists because <code>MagazineLayout</code> supports self-sizing in just the vertical dimension -
/// a use case that <code>UICollectionViewCell</code> does not support out-of-the-box.
/// As of iOS 12, <code>UICollectionReusableView</code> is tightly coupled with <code>UICollectionViewFlowLayout</code>‘s
/// private <code>_estimatesSizes</code> property, which is used to determine how to size cells displayed in a
/// <code>UICollectionViewFlowLayout</code>. If <code>_estimatesSizes</code> is <code>true</code>, then <code>UICollectionReusableView</code>
/// will self-size in both the horizontal and vertical dimensions. If it is <code>false</code>, no self-sizing
/// will occur. In short, <code>UICollectionReusableView</code> is only optimized to work correctly with
/// Apple’s own layout.
SWIFT_CLASS("_TtC15WLUserInterface32MagazineLayoutCollectionViewCell")
@interface MagazineLayoutCollectionViewCell : UICollectionViewCell
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// Encapsulates the vertical fitting priority for an element laid out by <code>MagazineLayout</code>.
/// Used by <code>UICollectionViewCell</code> and <code>UICollectionReusableView</code> subclasses to determine which
/// vertical fitting priority to pass into
/// <code>systemLayoutSizeFitting(_:withHorizontalFittingPriority:verticalFittingPriority)</code> via
/// <code>preferredLayoutAttributesFitting(_:)</code>.
SWIFT_CLASS("_TtC15WLUserInterface44MagazineLayoutCollectionViewLayoutAttributes")
@interface MagazineLayoutCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// <code>MagazineLayout</code>’s invalidation context type.
/// Used to indicate that collection view properties and/or delegate layout metrics changed.
SWIFT_CLASS("_TtC15WLUserInterface33MagazineLayoutInvalidationContext")
@interface MagazineLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15WLUserInterface7MapView")
@interface MapView : MKMapView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC15WLUserInterface20ModalScreenWrapperVC")
@interface ModalScreenWrapperVC : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class UIColor;
@class NSNumberFormatter;
@class UITextField;

IB_DESIGNABLE
SWIFT_CLASS("_TtC15WLUserInterface11MultiSlider")
@interface MultiSlider : UIControl
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull value;
@property (nonatomic) IBInspectable CGFloat minimumValue;
@property (nonatomic) IBInspectable CGFloat maximumValue;
@property (nonatomic) IBInspectable BOOL isContinuous;
@property (nonatomic, readonly) NSInteger draggedThumbIndex;
@property (nonatomic) IBInspectable NSInteger thumbCount;
/// make specific thumbs fixed (and grayed)
@property (nonatomic, copy) NSSet<NSNumber *> * _Nonnull disabledThumbIndices;
/// minimal distance to keep between thumbs (half a thumb by default)
@property (nonatomic) IBInspectable CGFloat distanceBetweenThumbs;
@property (nonatomic) IBInspectable BOOL keepsDistanceBetweenThumbs;
/// snap thumbs to specific values, evenly spaced. (default = 0: allow any value)
@property (nonatomic) IBInspectable CGFloat snapStepSize;
/// snap thumbs to specific values. changes <code>minimumValue</code> and <code>maximumValue</code>.  (default = []: allow any value)
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull snapValues;
/// image to show at each snap value
@property (nonatomic, strong) IBInspectable UIImage * _Nullable snapImage;
/// generate haptic feedback when hitting snap steps
@property (nonatomic) IBInspectable BOOL isHapticSnap;
/// show value labels next to thumbs. (default: show no label)
@property (nonatomic) NSLayoutAttribute valueLabelPosition;
/// value label shows difference from previous thumb value (true) or absolute value (false = default)
@property (nonatomic) IBInspectable BOOL isValueLabelRelative;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable valueLabelColor;
@property (nonatomic, strong) NSNumberFormatter * _Nonnull valueLabelFormatter;
/// Return value label text for a thumb index and value. If <code>nil</code>, then <code>valueLabelFormatter</code> will be used instead.
@property (nonatomic, copy) NSString * _Nullable (^ _Nullable valueLabelTextForThumb)(NSInteger, CGFloat);
@property (nonatomic) IBInspectable BOOL isVertical;
@property (nonatomic) UILayoutConstraintAxis orientation;
/// track color before first thumb and after last thumb. <code>nil</code> means to use the tintColor, like the rest of the track.
@property (nonatomic, strong) IBInspectable UIColor * _Nullable outerTrackColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable thumbTintColor;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable thumbImage;
@property (nonatomic) IBInspectable BOOL showsThumbImageShadow;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable minimumImage;
@property (nonatomic, strong) IBInspectable UIImage * _Nullable maximumImage;
@property (nonatomic) IBInspectable CGFloat trackWidth;
@property (nonatomic) IBInspectable BOOL hasRoundTrackEnds;
/// when thumb value is minimum or maximum, align it’s center with the track end instead of its edge.
@property (nonatomic) IBInspectable BOOL centerThumbOnTrackEnd;
@property (nonatomic, copy) NSArray<UIImageView *> * _Nonnull thumbViews;
@property (nonatomic, copy) NSArray<UITextField *> * _Nonnull valueLabels;
@property (nonatomic, strong) UIView * _Nonnull trackView;
@property (nonatomic, copy) NSArray<UIImageView *> * _Nonnull snapViews;
@property (nonatomic, copy) NSArray<UIView *> * _Nonnull outerTrackViews;
@property (nonatomic, strong) UIImageView * _Nonnull minimumView;
@property (nonatomic, strong) UIImageView * _Nonnull maximumView;
- (void)tintColorDidChange;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
@end


@class UIGestureRecognizer;
@class UIPanGestureRecognizer;

@interface MultiSlider (SWIFT_EXTENSION(WLUserInterface)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (void)didDrag:(UIPanGestureRecognizer * _Nonnull)panGesture;
@end











SWIFT_CLASS("_TtC15WLUserInterface16PagingImagesView")
@interface PagingImagesView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end






@interface PagingImagesView (SWIFT_EXTENSION(WLUserInterface)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC15WLUserInterface19PagingIndicatorView")
@interface PagingIndicatorView : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(CGRect)rect;
@end





SWIFT_CLASS("_TtC15WLUserInterface34TransparentBarNavigationController")
@interface TransparentBarNavigationController : UINavigationController
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15WLUserInterface28PanModalNavigationController")
@interface PanModalNavigationController : TransparentBarNavigationController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface PanModalNavigationController (SWIFT_EXTENSION(WLUserInterface))
- (UIViewController * _Nullable)popViewControllerAnimated:(BOOL)animated SWIFT_WARN_UNUSED_RESULT;
- (void)pushViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (void)setViewControllers:(NSArray<UIViewController *> * _Nonnull)viewControllers animated:(BOOL)animated;
@end



/// Handles the animation of the presentedViewController as it is presented or dismissed.
/// This is a vertical animation that
/// <ul>
///   <li>
///     Animates up from the bottom of the screen
///   </li>
///   <li>
///     Dismisses from the top to the bottom of the screen
///   </li>
/// </ul>
/// This can be used as a standalone object for transition animation,
/// but is primarily used in the PanModalPresentationDelegate for handling pan modal transitions.
/// note:
/// The presentedViewController can conform to PanModalPresentable to adjust
/// it’s starting position through manipulating the shortFormHeight
SWIFT_CLASS("_TtC15WLUserInterface28PanModalPresentationAnimator")
@interface PanModalPresentationAnimator : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol UIViewControllerContextTransitioning;

@interface PanModalPresentationAnimator (SWIFT_EXTENSION(WLUserInterface)) <UIViewControllerAnimatedTransitioning>
/// Returns the transition duration
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
/// Performs the appropriate animation based on the transition style
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
@end

@protocol UIViewControllerTransitionCoordinator;

/// The PanModalPresentationController is the middle layer between the presentingViewController
/// and the presentedViewController.
/// It controls the coordination between the individual transition classes as well as
/// provides an abstraction over how the presented view is presented & displayed.
/// For example, we add a drag indicator view above the presented view and
/// a background overlay between the presenting & presented view.
/// The presented view’s layout configuration & presentation is defined using the PanModalPresentable.
/// By conforming to the PanModalPresentable protocol & overriding values
/// the presented view can define its layout configuration & presentation.
SWIFT_CLASS("_TtC15WLUserInterface30PanModalPresentationController")
@interface PanModalPresentationController : UIPresentationController
/// Override presented view to return the pan container wrapper
@property (nonatomic, readonly, strong) UIView * _Nonnull presentedView;
- (void)containerViewWillLayoutSubviews;
- (void)presentationTransitionWillBegin;
- (void)presentationTransitionDidEnd:(BOOL)completed;
- (void)dismissalTransitionWillBegin;
- (void)dismissalTransitionDidEnd:(BOOL)completed;
/// Update presented view size in response to size class changes
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithPresentedViewController:(UIViewController * _Nonnull)presentedViewController presentingViewController:(UIViewController * _Nullable)presentingViewController OBJC_DESIGNATED_INITIALIZER;
@end



@interface PanModalPresentationController (SWIFT_EXTENSION(WLUserInterface)) <UIGestureRecognizerDelegate>
/// Do not require any other gesture recognizers to fail
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
/// Allow simultaneous gesture recognizers only when the other gesture recognizer’s view
/// is the pan scrollable view
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end






/// The PanModalPresentationDelegate conforms to the various transition delegates
/// and vends the appropriate object for each transition controller requested.
/// Usage:
/// \code
/// viewController.modalPresentationStyle = .custom
/// viewController.transitioningDelegate = PanModalPresentationDelegate.default
///
/// \endcode
SWIFT_CLASS("_TtC15WLUserInterface28PanModalPresentationDelegate")
@interface PanModalPresentationDelegate : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface PanModalPresentationDelegate (SWIFT_EXTENSION(WLUserInterface)) <UIPopoverPresentationControllerDelegate>
/// Dismisses the presented view controller
- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller traitCollection:(UITraitCollection * _Nonnull)traitCollection SWIFT_WARN_UNUSED_RESULT;
@end


@interface PanModalPresentationDelegate (SWIFT_EXTENSION(WLUserInterface)) <UIViewControllerTransitioningDelegate>
/// Returns a modal presentation animator configured for the presenting state
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Returns a modal presentation animator configured for the dismissing state
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
/// Returns a modal presentation controller to coordinate the transition from the presenting
/// view controller to the presented view controller.
/// Changes in size class during presentation are handled via the adaptive presentation delegate
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC15WLUserInterface19PointAnnotationView")
@interface PointAnnotationView : MKAnnotationView
- (nonnull instancetype)initWithAnnotation:(id <MKAnnotation> _Nullable)annotation reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)prepareForDisplay;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end



SWIFT_CLASS("_TtC15WLUserInterface28PriceAndRatingAnnotationView")
@interface PriceAndRatingAnnotationView : MKAnnotationView
@property (nonatomic, strong) id <MKAnnotation> _Nullable annotation;
- (nonnull instancetype)initWithAnnotation:(id <MKAnnotation> _Nullable)annotation reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
@end





SWIFT_CLASS("_TtC15WLUserInterface10PriceChart")
@interface PriceChart : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end







@interface PriceChart (SWIFT_EXTENSION(WLUserInterface))
@end


@interface PriceChart (SWIFT_EXTENSION(WLUserInterface))
@end



@class UIScrollView;

@interface PriceChart (SWIFT_EXTENSION(WLUserInterface)) <UICollectionViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC15WLUserInterface11ProgressBar")
@interface ProgressBar : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface17SelectableControl")
@interface SelectableControl : UIControl
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface13RatingTagView")
@interface RatingTagView : SelectableControl
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end






SWIFT_RESILIENT_CLASS("_TtC15WLUserInterface23RoundedCrispyCalendarVC")
@interface RoundedCrispyCalendarVC : CPCCalendarViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(BOOL)animated;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)selectionDidChange;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC15WLUserInterface19SearchResultRowCell")
@interface SearchResultRowCell : BaseCollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC15WLUserInterface13SectionHeader")
@interface SectionHeader : UICollectionReusableView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)prepareForReuse;
@end





SWIFT_CLASS("_TtC15WLUserInterface22SegmentedControlRouter")
@interface SegmentedControlRouter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15WLUserInterface20SegmentedControlView")
@interface SegmentedControlView : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC15WLUserInterface16SelectionControl")
@interface SelectionControl : UIControl
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC15WLUserInterface26SeparatorSupplementaryView")
@interface SeparatorSupplementaryView : UICollectionReusableView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface12SkeletonCell")
@interface SkeletonCell : BaseCollectionViewCell
- (UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC15WLUserInterface16SkeletonCellView")
@interface SkeletonCellView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end






SWIFT_CLASS("_TtC15WLUserInterface10SliderView")
@interface SliderView : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end





SWIFT_CLASS("_TtC15WLUserInterface17SquircleImageView")
@interface SquircleImageView : UIImageView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC15WLUserInterface12StarsTagView")
@interface StarsTagView : SelectableControl
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end







SWIFT_CLASS("_TtC15WLUserInterface11StepperCell")
@interface StepperCell : BaseCollectionViewCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC15WLUserInterface11StepperView")
@interface StepperView : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC15WLUserInterface8TextCell")
@interface TextCell : BaseCollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC15WLUserInterface12TextCellView")
@interface TextCellView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC15WLUserInterface12TitleTagView")
@interface TitleTagView : SelectableControl
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end






@class UITouch;

SWIFT_CLASS("_TtC15WLUserInterface25TouchesPassCollectionView")
@interface TouchesPassCollectionView : UICollectionView
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC15WLUserInterface13TwoTitlesView")
@interface TwoTitlesView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end























































SWIFT_CLASS("_TtC15WLUserInterface14WebBrowserView")
@interface WebBrowserView : BaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtCC15WLUserInterface12WebBrowserVC21WebNavigationDelegate")
@interface WebNavigationDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class WKWebView;
@class WKWebViewConfiguration;
@class WKNavigationAction;
@class WKWindowFeatures;

@interface WebNavigationDelegate (SWIFT_EXTENSION(WLUserInterface)) <WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
@end

@class WKNavigation;

@interface WebNavigationDelegate (SWIFT_EXTENSION(WLUserInterface)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
@end


SWIFT_CLASS("_TtC15WLUserInterface19ZeroDataEmbededView")
@interface ZeroDataEmbededView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC15WLUserInterface12ZeroDataView")
@interface ZeroDataView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)didMoveToSuperview;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif

#else
#error unsupported Swift architecture
#endif
